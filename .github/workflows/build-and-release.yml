name: Build and Release for Raspberry Pi OS 64-bit

on:
  repository_dispatch:
    types: [update-binary]

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for tags

      # Step 2: Determine the latest tag
      - name: Get Latest Tag
        id: get-latest-tag
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      # Step 3: Set up Go
      - name: Set Up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.2'

      # Step 4: Install ARM64 GCC Toolchain
      - name: Install ARM64 GCC Toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      # Step 5: Build the binary for ARM64
      - name: Build Binary
        run: |
          mkdir -p ./bin/linux-arm64
          CC=aarch64-linux-gnu-gcc CGO_ENABLED=1 GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o ./bin/linux-arm64/wastetags ./cmd/wastetags/*.go

      # Step 6: Create or Update GitHub Release
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./bin/linux-arm64/wastetags
          tag: ${{ steps.get-latest-tag.outputs.tag }}
          name: Latest Binary (${{ steps.get-latest-tag.outputs.tag }})
          body: "Automatically updated binary built for Raspberry Pi OS 64-bit (ARM64)."
          draft: false
          prerelease: false
          allowUpdates: true
